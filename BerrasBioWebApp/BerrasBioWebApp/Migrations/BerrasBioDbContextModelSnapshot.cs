// <auto-generated />
using System;
using BerrasBioWebApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BerrasBioWebApp.Migrations
{
    [DbContext(typeof(BerrasBioDbContext))]
    partial class BerrasBioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BerrasBioWebApp.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("Length")
                        .HasColumnName("length")
                        .HasColumnType("time(0)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Year")
                        .HasColumnName("year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Film");
                });

            modelBuilder.Entity("BerrasBioWebApp.Models.FilmSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<int>("Filmid")
                        .HasColumnName("filmid")
                        .HasColumnType("int");

                    b.Property<int>("Freechairs")
                        .HasColumnName("freechairs")
                        .HasColumnType("int");

                    b.Property<bool>("Fullybooked")
                        .HasColumnName("fullybooked")
                        .HasColumnType("bit");

                    b.Property<int>("Salonid")
                        .HasColumnName("salonid")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Showtime")
                        .HasColumnName("showtime")
                        .HasColumnType("time(0)");

                    b.HasKey("Id");

                    b.HasIndex("Filmid");

                    b.HasIndex("Salonid");

                    b.ToTable("FilmSchedule");
                });

            modelBuilder.Entity("BerrasBioWebApp.Models.Salon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Seats")
                        .HasColumnName("seats")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Salon");
                });

            modelBuilder.Entity("BerrasBioWebApp.Models.FilmSchedule", b =>
                {
                    b.HasOne("BerrasBioWebApp.Models.Film", "Film")
                        .WithMany("FilmSchedule")
                        .HasForeignKey("Filmid")
                        .HasConstraintName("FK__FilmSched__filmi__3F466844")
                        .IsRequired();

                    b.HasOne("BerrasBioWebApp.Models.Salon", "Salon")
                        .WithMany("FilmSchedule")
                        .HasForeignKey("Salonid")
                        .HasConstraintName("FK__FilmSched__salon__403A8C7D")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
